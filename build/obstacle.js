// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  this.Obstacle = (function(superClass) {
    extend(Obstacle, superClass);

    Obstacle.prototype.COLOR = 0x95a5a6;

    Obstacle.prototype.LANES = {
      0: -20,
      1: 0,
      2: 20
    };

    function Obstacle(game, y, lane) {
      this.collision = bind(this.collision, this);
      this.game = game;
      this.geometry = this.getModel();
      this.object = new THREE.Mesh(this.geometry, this.MATERIAL);
      this.object.castShadow = true;
      this.object.receiveShadow = true;
      this.bounding_box = this.getBoudingBox();
      this.game.addToScene(this.object);
      this.bounding_box.setPosition(this.LANES[lane], y, this.BASE_Z);
      this.setPosition(this.LANES[lane], y, this.BASE_Z);
      this.setScale(this.SCALE.x, this.SCALE.y, this.SCALE.z);
      this.bounding_box.object.addEventListener('collision', this.collision);
      this.afterCreate();
    }

    Obstacle.prototype.collision = function(other) {
      if (other.name === 'Player') {
        return this.game.reset();
      }
    };

    return Obstacle;

  })(this.Entity);

}).call(this);
